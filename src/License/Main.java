package License;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.lang.reflect.Method;
import java.security.MessageDigest;
import java.util.Arrays;

/**
 * Created by explorer on 17/4/6.
 */
// 3xp10rEr
public class Main {
    private static byte[] data = new byte[]{-52, -27, -2, -9, -48, 16, 29, -12, 53, 120, -59, 50, -95, 0, -98, 8, 36, -15, 110, 51, 53, 7, -101, -11, -5, 113, -86, 32, -79, -89, -37, 109, -15, 18, 2, -6, -51, 102, -25, 34, -42, -59, 124, -98, 124, 109, -87, -115, 59, 12, 12, 72, 47, -61, 17, -107, -22, -29, 39, -54, 124, 72, 9, -32, -109, 29, 32, 3, -21, -104, -54, 115, -35, -111, -29, -60, -14, -37, 103, 111, -44, -121, -12, -61, 67, -124, -76, 87, 38, 123, 15, 66, -59, -61, 100, -85, -116, 6, 62, 46, -81, 30, 18, 50, -24, 2, 87, 118, 9, 18, -50, -41, -125, 50, -126, 21, -15, 52, -80, -112, -21, 55, 114, 69, 33, -49, 55, 48, 63, 56, 70, 12, 68, -23, 30, -126, 70, -71, -66, 60, -65, -39, 37, 67, 124, 50, 34, 91, 71, 76, -87, 86, 31, -80, -124, 66, 23, -37, 85, 21, -96, 103, -122, -22, 82, 59, 15, 53, -30, -27, -122, -5, 24, 117, -33, 73, 79, 44, 53, -66, 63, 28, 65, -97, 84, -109, -65, -61, -75, 72, 105, 27, -101, 10, 18, 38, 36, -29, 34, -20, -20, -45, -119, 23, 35, 78, 59, -98, 3, 99, 49, -54, -125, 113, 58, -64, 12, 37, -34, 25, -108, 93, 60, 40, -50, 84, -60, -41, -33, -128, 120, 31, 124, 106, 82, -128, 74, 20, 22, 65, 66, 43, -32, -126, 9, 98, 69, 11, 95, 90, 100, -80, 42, 27, -96, -45};
    private static int[] table = new int[]{166, 11, 230, 189, 10, 98, 164, 82, 18, 125, 248, 131, 119, 67, 177, 224, 75, 43, 40, 209, 237, 62, 97, 116, 110, 146, 77, 99, 222, 174, 163, 30, 38, 227, 58, 151, 0, 97, 244, 85, 188, 213, 67, 152, 156, 189, 179, 22, 230, 255, 200, 103, 243, 18, 17, 214, 21, 81, 140, 184, 113, 209, 216, 122, 73, 45, 48, 153, 190, 164, 115, 161, 88, 253, 33, 162, 55, 201, 136, 23, 56, 185, 50, 42, 143, 178, 238, 44, 222, 254, 126, 72, 189, 123, 217, 197, 125, 163, 104, 62, 169, 61, 106, 130, 164, 200, 111, 94, 52, 143, 129, 70, 194, 48, 57, 224, 49, 54, 143, 12, 93, 53, 71, 51, 176, 199, 102, 100, 209, 36, 90, 222, 123, 168, 69, 113, 162, 106, 54, 135, 131, 172, 213, 187, 196, 193, 26, 171, 33, 154, 123, 17, 57, 116, 109, 13, 215, 153, 51, 181, 253, 134, 25, 147, 82, 166, 221, 108, 178, 100, 7, 178, 8, 180, 72, 210, 42, 180, 17, 65, 145, 13, 193, 40, 8, 139, 5, 195, 203, 141, 156, 162, 94, 189, 238, 200, 96, 186, 62, 14, 172, 160, 92, 148, 212, 77, 248, 49, 225, 141, 106, 155, 27, 165, 109, 185, 29, 186, 41, 216, 213, 75, 191, 213, 135, 242, 204, 158, 86, 200, 209, 220, 104, 47, 175, 19, 2, 102, 104, 145, 65, 5, 103, 69, 187, 87, 45, 138, 223, 9, 242, 110, 87, 204, 112, 55};

    public static void main(String argv[]) throws Exception {
        System.out.print("no password no game:");
        BufferedReader stdin = new BufferedReader(new InputStreamReader(System.in));
        String password = stdin.readLine();
        if (password.length() != 8) {
            throw new Exception("password error");
        }
        byte[] code = password.getBytes();
        for (int i = 0; i < table.length; i++) {
            table[i] = table[i] ^ code[i % 8];
        }
        byte[] trueData = new byte[data.length];
        for (int i = 0; i < data.length; i++) {
            trueData[table[i]] = data[i];
        }

        MessageDigest md = MessageDigest.getInstance("SHA-256");
        md.update(trueData);
        byte[] sha = md.digest();
        if (Arrays.equals(sha, new byte[]{52, -74, -66, -73, -54, -30, -55, -126, 7, -119, -31, 64, -26, 25, -55, -24, 61, 15, -69, -70, -92, -109, -4, 109, -104, -96, -50, 95, -32, -11, -86, 41})) {
            myClass.code = trueData;
        } else {
            throw new Exception("password error");
        }

        myClass mc = new myClass();
        Class<?> clazz = mc.loadClass("License.a");
        Method c = clazz.getMethod("a", (Class<?>[]) null);
        c.invoke(null);
    }
}
